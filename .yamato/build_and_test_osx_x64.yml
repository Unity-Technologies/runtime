name: Build and Test OSX x64

agent:
  type: Unity::VM::osx
  image: platform-foundation/mac-bokken:latest
  flavor: m1.mac

commands:
  - mkdir artifacts
  - curl https://public-stevedore.unity3d.com/r/public/7za-mac-x64/e6c75fb7ffda_5bd76652986a0e3756d1cfd7e84ce056a9e1dbfc5f70f0514a001f724c0fbad2.zip --output artifacts/7za-mac-x64.zip
  - unzip artifacts/7za-mac-x64.zip -d artifacts/7za-mac-x64
  - |
    cd unity/unitygc
    mkdir release
    cd release
    cmake -DCMAKE_BUILD_TYPE=Release ..
    cmake --build .
  - LD_LIBRARY_PATH=/usr/local/opt/openssl/lib ./build.sh -subset clr+libs -a x64 -c release -ci -ninja
  - cp unity/unitygc/release/libunitygc.dylib artifacts/bin/microsoft.netcore.app.runtime.osx-x64/Release/runtimes/osx-x64/native
  - artifacts/7za-mac-x64/7za a artifacts/unity/dotnet-runtime-unity-osx-x64.7z ./artifacts/bin/microsoft.netcore.app.runtime.osx-x64/Release/runtimes/osx-x64/*
# build/run tests
  - dotnet build unity/managed.sln -c Release
  - |
    cd unity/embed_api_tests
    cmake -DCMAKE_BUILD_TYPE=Release .
    cmake --build .
    ./mono_test_app
  - LD_LIBRARY_PATH=/usr/local/opt/openssl/lib ./build.sh -subset libs.tests -test -a x64 -c release -ci -ninja
  - ./src/tests/build.sh x64 release ci
  - ./src/tests/run.sh x64 release
  - ./build.sh clr.paltests
  - ./artifacts/bin/coreclr/OSX.x64.Debug/paltests/runpaltests.sh $(pwd)/artifacts/bin/coreclr/OSX.x64.Debug/paltests

triggers:
  pull_requests:
    - targets:
        only:
          - "unity-main"

artifacts: 
  osx64:
    paths:
      - artifacts/unity/dotnet-runtime-unity-osx-x64.7z
